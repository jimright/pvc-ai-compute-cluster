# Copyright 2023 Cloudera, Inc.
# 
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

### Infrastructure

infra:
  # SE tenant IOPSCloud
  boot_from_volume: True
  default_image_name: "GOES-centos-8.4"
  network_name: SE_INTERNAL_NET
  subnet_name: SE_INTERNAL_SUBNET
  default_availability_zone: "{{ infra_az }}"
  nodes:
    # Manager, FreeIPA, DB
    - hostname_prefix: "manager" # hostname will be of form {{ name_prefix }}-{{ hostname_prefix }}-<index of {{ count }}>
      count: 1
      groups:
        - cloudera_manager
        - freeipa
        - deployment
        - db_server
      flavor: r1.medium
      boot_volume_size: 200 
      ansible_user: centos
    # Master
    - hostname_prefix: "base" # hostname will be of form {{ name_prefix }}-{{ hostname_prefix }}-<index of {{ count }}>
      count: 1
      groups:         
        - cluster_masters
        - cluster
        - deployment
      host_template: Masters
      flavor: m1.4xlarge
      boot_volume_size: 300
      ansible_user: centos
      tls: True
    - hostname_prefix: ecs-m
      host_template: ECSMaster
      count: 1
      groups: 
        - cluster_ecs_masters
        - cluster
        - nodes
        - ecs_nodes
        - linux_nodes
        - deployment
      flavor: m1.xlarge
      boot_volume_size: 100      
      volumes:
        - suffix: vol1 # volume name will be of form "{{ name_prefix }}-{{hostname_prefix }}-<index of {{ count }}-{{ volume suffix }}"
          mount: /ecs
          size: 250
      ansible_user: centos
      tls: True
    # ECS Workers
    - hostname_prefix: ecs-w
      host_template: ECSWorker
      count: 1
      groups:
        - cluster_ecs_workers
        - cluster
        - nodes
        - ecs_nodes
        - linux_nodes
        - deployment
      flavor: m1.4xlarge
      boot_volume_size: 100      
      volumes:
        - suffix: vol1 # volume name will be of form "{{ name_prefix }}-{{hostname_prefix }}-<index of {{ count }}-{{ volume suffix }}"
          mount: /ecs
          size: 250
      ansible_user: centos
      tls: True

# Terraform
terraform:
  parallelism: 1
  state:
    storage: local
    create_remote_storage: False

# SSH
public_key_id: "{{ name_prefix }}-pvc-base"
public_key_file: "{{ lookup('ansible.builtin.env', 'SSH_PUBLIC_KEY_FILE') }}"
public_key_text: "{{ lookup('ansible.builtin.file', lookup('ansible.builtin.env', 'SSH_PUBLIC_KEY_FILE')) }}"

### Cluster

kerberos_activated: True
encryption_activated: True

jdk_version: 11

base_repositories:
- https://archive.cloudera.com/p/cdh7/7.1.9.1000/parcels/  # Official CDH 7.1.9 SP1

# ECS details
ecs_options:
  # Version 1.5.2
  # repository: https://archive.cloudera.com/p/cdp-pvc-ds/1.5.2/
  # parcel_repositories:
  #   - https://archive.cloudera.com/p/cdp-pvc-ds/1.5.2/parcels/
  # Version 1.5.3
  # repository: https://archive.cloudera.com/p/cdp-pvc-ds/1.5.3/
  # parcel_repositories:
  #   - https://archive.cloudera.com/p/cdp-pvc-ds/1.5.3/parcels/
  # Version 1.5.4
  repository: https://archive.cloudera.com/p/cdp-pvc-ds/1.5.4/
  parcel_repositories:
    - https://archive.cloudera.com/p/cdp-pvc-ds/1.5.4/parcels/

repositories: "{{ base_repositories | union(ecs_options.parcel_repositories) }}"

# Connect FreeIPA to Knox and Ranger
freeipa_activated: yes
# FreeIPA client install on cluster nodes is done during pre_setup, so suppress
freeipa_enroll: no 

# Network CIDR for DNS zones that FreeIPA server will manage
freeipa_network_dns_zones:
  - 10.129.80.0/24
  - 10.129.81.0/24
  - 10.129.82.0/24
  - 10.129.83.0/24

# FreeIPA realm settings
freeipa:
  realm: "{{ realm }}"
  ipaadmin_user: admin
  ipaadmin_password: "{{ common_password }}"

# Defer user and group creation to SSSD/FreeIPA registration
# Use when you dont need ansible to run "ca_server"
skip_user_group_init: no

### Cloudera Manager

cloudera_manager_version: 7.11.3.9

# General options
cloudera_manager_options:
  CUSTOM_BANNER_HTML: "Cloudera AI Compute Cluster ({{ name_prefix }})"
  SESSION_TIMEOUT: 43200
  PARCEL_DISTRIBUTE_RATE_LIMIT_KBS_PER_SECOND: 194560
  KRB_AUTH_ENABLE: "true"

# Cloudera license
license_file: "{{ lookup('ansible.builtin.env', 'CDP_LICENSE_FILE') }}"

# License options (this is due to a hardcoded tmp directory on the target/manager node)
license_local_tmp_path: /tmp/cloudera_license.txt

###  RDBMS

database_type: postgresql
database_version: 12
database_tls: true
database_default_password: "{{ common_password }}"

### Red Hat FreeIPA

krb5_kdc_type: Red Hat IPA
krb5_realm: "{{ freeipa.realm }}"
krb5_kdc_admin_user: "{{ freeipa.ipaadmin_user }}@{{ krb5_realm }}"
krb5_kdc_admin_password: "{{ freeipa.ipaadmin_password }}"
krb5_enc_types: "aes256-cts aes128-cts"
# TODO: This needs to either be explicit or rendered from a host with DNS resolution
# Cannot rely on localhost to have DNS access, e.g. private networking on EC2
#krb5_kdc_host: "{{ lookup('community.general.dig', '_ldap._tcp.' + domain +'./SRV', 'flat=0', wantlist=True, fail_on_error=True) | map(attribute='target') | first }}"
krb5_kdc_host: "{{ groups['freeipa'] | first | default('') }}"

###  CM External Auth - FreeIPA as LDAP

# Settings for FreeIPA sidecar deployment
cloudera_manager_external_auth:
  provider: freeipa
  external_first: no
  external_only: no

auth_provider: "{{ auth_providers[cloudera_manager_external_auth.provider] }}"

base_dn: "dc={{ freeipa.realm.split('.') | map('lower') | join(',dc=') }}"
user_dn: "cn=users,cn=accounts,{{ base_dn }}"
group_dn: "cn=groups,cn=accounts,{{ base_dn }}"

auth_providers:
  freeipa:
    ldap_url: "ldaps://{{ groups['freeipa'] | first | default('') }}:636"
    ldap_base_dn: "{{ base_dn }}"
    ldap_bind_user_dn: "uid=admin,{{ user_dn }}"
    ldap_bind_password: "{{ freeipa.ipaadmin_password }}"
    ldap_search_base:
      user: "{{ user_dn }}"
      group: "{{ group_dn }}"
    ldap_object_class:
      user: "person"
      group: "posixgroup"
    ldap_search_filter: # Used for mapping Services (Atlas, Ranger, etc.) to LDAP
      user: "uid={0}"
      member: (member={0})
      # group: (&(member={0})(objectclass=posixgroup)(!(cn=admins)))
    ldap_attribute: # Used for mapping CM to LDAP
     user: uid # Set to (uid={0})
     member: member # defaults to (member={0})
    ldap_attr_user_name: "uid"
    ldap_attr_group_name: "cn"
    ldap_attr_group_membership: "member"
    type: LDAP

## TLS signing
skip_ipa_signing: no # This is the default
remote_ipa_server: "{{ groups['freeipa'] | first | default('') }}"

tls_key_password: "{{ common_password }}"
tls_keystore_password: "{{ common_password }}"
tls_truststore_password: "{{ common_password }}"

ca_server_attrs_root:
  CN: 'SE-Root CA'
ca_server_attrs_intermediate:
  CN: 'SE-Intermediate CA'

# Vars from legacy cloudera-Deploy
use_auto_repo_mirror: no
use_default_cluster_definition: no
use_download_mirror: no
preload_cm_parcel_repo: yes
teardown_everything: yes